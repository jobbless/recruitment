<?php

// Data functions (insert, update, delete, form) for table MEDICAL_EXAMINATION

// This script and data application were generated by AppGini 5.82
// Download AppGini for free from https://bigprof.com/appgini/download/

function MEDICAL_EXAMINATION_insert() {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('MEDICAL_EXAMINATION');
	if(!$arrPerm[1]) return false;

	$data = array();
	$data['Medical_Examination_ID'] = $_REQUEST['Medical_Examination_ID'];
		if($data['Medical_Examination_ID'] == empty_lookup_value) { $data['Medical_Examination_ID'] = ''; }
	$data['First_name'] = $_REQUEST['First_name'];
		if($data['First_name'] == empty_lookup_value) { $data['First_name'] = ''; }
	$data['Middle_name'] = $_REQUEST['Middle_name'];
		if($data['Middle_name'] == empty_lookup_value) { $data['Middle_name'] = ''; }
	$data['Last_name'] = $_REQUEST['Last_name'];
		if($data['Last_name'] == empty_lookup_value) { $data['Last_name'] = ''; }
	$data['Name_of_Medical_officer'] = $_REQUEST['Name_of_Medical_officer'];
		if($data['Name_of_Medical_officer'] == empty_lookup_value) { $data['Name_of_Medical_officer'] = ''; }
	$data['Examinaton_date'] = intval($_REQUEST['Examinaton_dateYear']) . '-' . intval($_REQUEST['Examinaton_dateMonth']) . '-' . intval($_REQUEST['Examinaton_dateDay']);
	$data['Examinaton_date'] = parseMySQLDate($data['Examinaton_date'], '');
	$data['Result'] = $_REQUEST['Result'];
		if($data['Result'] == empty_lookup_value) { $data['Result'] = ''; }
	$data['Remark'] = $_REQUEST['Remark'];
		if($data['Remark'] == empty_lookup_value) { $data['Remark'] = ''; }
	$data['Place_of_Examination'] = $_REQUEST['Place_of_Examination'];
		if($data['Place_of_Examination'] == empty_lookup_value) { $data['Place_of_Examination'] = ''; }
	if($data['Medical_Examination_ID'] == '') {echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'MEdical_Examination ID': " . $Translation['pkfield empty'] . '</div>'; exit;}


	// hook: MEDICAL_EXAMINATION_before_insert
	if(function_exists('MEDICAL_EXAMINATION_before_insert')) {
		$args = array();
		if(!MEDICAL_EXAMINATION_before_insert($data, getMemberInfo(), $args)) { return false; }
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('MEDICAL_EXAMINATION', backtick_keys_once($data), $error);
	if($error)
		die("{$error}<br><a href=\"#\" onclick=\"history.go(-1);\">{$Translation['< back']}</a>");

	$recID = $data['Medical_Examination_ID'];

	// hook: MEDICAL_EXAMINATION_after_insert
	if(function_exists('MEDICAL_EXAMINATION_after_insert')) {
		$res = sql("select * from `MEDICAL_EXAMINATION` where `Medical_Examination_ID`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!MEDICAL_EXAMINATION_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('MEDICAL_EXAMINATION', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(!empty($_REQUEST['SelectedID'])) MEDICAL_EXAMINATION_copy_children($recID, $_REQUEST['SelectedID']);

	return $recID;
}

function MEDICAL_EXAMINATION_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = array(); // array of curl handlers for launching insert requests
	$eo = array('silentErrors' => true);
	$uploads_dir = realpath(dirname(__FILE__) . '/../' . $Translation['ImageFolder']);
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function MEDICAL_EXAMINATION_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('MEDICAL_EXAMINATION');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='MEDICAL_EXAMINATION' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='MEDICAL_EXAMINATION' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: MEDICAL_EXAMINATION_before_delete
	if(function_exists('MEDICAL_EXAMINATION_before_delete')) {
		$args=array();
		if(!MEDICAL_EXAMINATION_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `MEDICAL_EXAMINATION` where `Medical_Examination_ID`='$selected_id'", $eo);

	// hook: MEDICAL_EXAMINATION_after_delete
	if(function_exists('MEDICAL_EXAMINATION_after_delete')) {
		$args=array();
		MEDICAL_EXAMINATION_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='MEDICAL_EXAMINATION' and pkValue='$selected_id'", $eo);
}

function MEDICAL_EXAMINATION_update($selected_id) {
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('MEDICAL_EXAMINATION');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='MEDICAL_EXAMINATION' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='MEDICAL_EXAMINATION' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3) { // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['Medical_Examination_ID'] = makeSafe($_REQUEST['Medical_Examination_ID']);
		if($data['Medical_Examination_ID'] == empty_lookup_value) { $data['Medical_Examination_ID'] = ''; }
	$data['First_name'] = makeSafe($_REQUEST['First_name']);
		if($data['First_name'] == empty_lookup_value) { $data['First_name'] = ''; }
	$data['Middle_name'] = makeSafe($_REQUEST['Middle_name']);
		if($data['Middle_name'] == empty_lookup_value) { $data['Middle_name'] = ''; }
	$data['Last_name'] = makeSafe($_REQUEST['Last_name']);
		if($data['Last_name'] == empty_lookup_value) { $data['Last_name'] = ''; }
	$data['Name_of_Medical_officer'] = makeSafe($_REQUEST['Name_of_Medical_officer']);
		if($data['Name_of_Medical_officer'] == empty_lookup_value) { $data['Name_of_Medical_officer'] = ''; }
	$data['Examinaton_date'] = intval($_REQUEST['Examinaton_dateYear']) . '-' . intval($_REQUEST['Examinaton_dateMonth']) . '-' . intval($_REQUEST['Examinaton_dateDay']);
	$data['Examinaton_date'] = parseMySQLDate($data['Examinaton_date'], '');
	$data['Result'] = makeSafe($_REQUEST['Result']);
		if($data['Result'] == empty_lookup_value) { $data['Result'] = ''; }
	$data['Remark'] = makeSafe($_REQUEST['Remark']);
		if($data['Remark'] == empty_lookup_value) { $data['Remark'] = ''; }
	$data['Place_of_Examination'] = makeSafe($_REQUEST['Place_of_Examination']);
		if($data['Place_of_Examination'] == empty_lookup_value) { $data['Place_of_Examination'] = ''; }
	$data['selectedID'] = makeSafe($selected_id);

	// hook: MEDICAL_EXAMINATION_before_update
	if(function_exists('MEDICAL_EXAMINATION_before_update')) {
		$args = array();
		if(!MEDICAL_EXAMINATION_before_update($data, getMemberInfo(), $args)) { return false; }
	}

	$o = array('silentErrors' => true);
	sql('update `MEDICAL_EXAMINATION` set       `Medical_Examination_ID`=' . (($data['Medical_Examination_ID'] !== '' && $data['Medical_Examination_ID'] !== NULL) ? "'{$data['Medical_Examination_ID']}'" : 'NULL') . ', `First_name`=' . (($data['First_name'] !== '' && $data['First_name'] !== NULL) ? "'{$data['First_name']}'" : 'NULL') . ', `Middle_name`=' . (($data['Middle_name'] !== '' && $data['Middle_name'] !== NULL) ? "'{$data['Middle_name']}'" : 'NULL') . ', `Last_name`=' . (($data['Last_name'] !== '' && $data['Last_name'] !== NULL) ? "'{$data['Last_name']}'" : 'NULL') . ', `Name_of_Medical_officer`=' . (($data['Name_of_Medical_officer'] !== '' && $data['Name_of_Medical_officer'] !== NULL) ? "'{$data['Name_of_Medical_officer']}'" : 'NULL') . ', `Examinaton_date`=' . (($data['Examinaton_date'] !== '' && $data['Examinaton_date'] !== NULL) ? "'{$data['Examinaton_date']}'" : 'NULL') . ', `Result`=' . (($data['Result'] !== '' && $data['Result'] !== NULL) ? "'{$data['Result']}'" : 'NULL') . ', `Remark`=' . (($data['Remark'] !== '' && $data['Remark'] !== NULL) ? "'{$data['Remark']}'" : 'NULL') . ', `Place_of_Examination`=' . (($data['Place_of_Examination'] !== '' && $data['Place_of_Examination'] !== NULL) ? "'{$data['Place_of_Examination']}'" : 'NULL') . " where `Medical_Examination_ID`='".makeSafe($selected_id)."'", $o);
	if($o['error']!='') {
		echo $o['error'];
		echo '<a href="MEDICAL_EXAMINATION_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}

	$data['selectedID'] = $data['Medical_Examination_ID'];

	// hook: MEDICAL_EXAMINATION_after_update
	if(function_exists('MEDICAL_EXAMINATION_after_update')) {
		$res = sql("SELECT * FROM `MEDICAL_EXAMINATION` WHERE `Medical_Examination_ID`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['Medical_Examination_ID'];
		$args = array();
		if(!MEDICAL_EXAMINATION_after_update($data, getMemberInfo(), $args)) { return; }
	}

	// mm: update ownership data
	sql("update `membership_userrecords` set `dateUpdated`='" . time() . "', `pkValue`='{$data['Medical_Examination_ID']}' where `tableName`='MEDICAL_EXAMINATION' and `pkValue`='" . makeSafe($selected_id) . "'", $eo);

}

function MEDICAL_EXAMINATION_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('MEDICAL_EXAMINATION');
	if(!$arrPerm[1] && $selected_id=='') { return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != '') {
		$dvprint = true;
	}


	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: Examinaton_date
	$combo_Examinaton_date = new DateCombo;
	$combo_Examinaton_date->DateFormat = "mdy";
	$combo_Examinaton_date->MinYear = 1900;
	$combo_Examinaton_date->MaxYear = 2100;
	$combo_Examinaton_date->DefaultDate = parseMySQLDate('', '');
	$combo_Examinaton_date->MonthNames = $Translation['month names'];
	$combo_Examinaton_date->NamePrefix = 'Examinaton_date';
	// combobox: Result
	$combo_Result = new Combo;
	$combo_Result->ListType = 0;
	$combo_Result->MultipleSeparator = ', ';
	$combo_Result->ListBoxHeight = 10;
	$combo_Result->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/MEDICAL_EXAMINATION.Result.csv')) {
		$Result_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/MEDICAL_EXAMINATION.Result.csv')));
		$combo_Result->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($Result_data)));
		$combo_Result->ListData = $combo_Result->ListItem;
	}else{
		$combo_Result->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Fit;;Unfit")));
		$combo_Result->ListData = $combo_Result->ListItem;
	}
	$combo_Result->SelectName = 'Result';

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm[2]) {
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='MEDICAL_EXAMINATION' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='MEDICAL_EXAMINATION' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID) {
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID) {
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3) {
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("SELECT * FROM `MEDICAL_EXAMINATION` WHERE `Medical_Examination_ID`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'MEDICAL_EXAMINATION_view.php', false);
		}
		$combo_Examinaton_date->DefaultDate = $row['Examinaton_date'];
		$combo_Result->SelectedData = $row['Result'];
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
	} else {
		$combo_Result->SelectedText = ( $_REQUEST['FilterField'][1]=='7' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
	}
	$combo_Result->Render();

	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/MEDICAL_EXAMINATION_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/MEDICAL_EXAMINATION_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'MEDICAL EXAMINATION details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert) {
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return MEDICAL_EXAMINATION_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return MEDICAL_EXAMINATION_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return MEDICAL_EXAMINATION_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly .= "\tjQuery('#Medical_Examination_ID').replaceWith('<div class=\"form-control-static\" id=\"Medical_Examination_ID\">' + (jQuery('#Medical_Examination_ID').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#First_name').replaceWith('<div class=\"form-control-static\" id=\"First_name\">' + (jQuery('#First_name').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Middle_name').replaceWith('<div class=\"form-control-static\" id=\"Middle_name\">' + (jQuery('#Middle_name').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Last_name').replaceWith('<div class=\"form-control-static\" id=\"Last_name\">' + (jQuery('#Last_name').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Name_of_Medical_officer').replaceWith('<div class=\"form-control-static\" id=\"Name_of_Medical_officer\">' + (jQuery('#Name_of_Medical_officer').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Examinaton_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#Examinaton_dateDay, #Examinaton_dateMonth, #Examinaton_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#Result').replaceWith('<div class=\"form-control-static\" id=\"Result\">' + (jQuery('#Result').val() || '') + '</div>'); jQuery('#Result-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#Remark').replaceWith('<div class=\"form-control-static\" id=\"Remark\">' + (jQuery('#Remark').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Place_of_Examination').replaceWith('<div class=\"form-control-static\" id=\"Place_of_Examination\">' + (jQuery('#Place_of_Examination').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert) {
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(Examinaton_date)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_Examinaton_date->GetHTML(true) . '</div>' : $combo_Examinaton_date->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(Examinaton_date)%%>', $combo_Examinaton_date->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(Result)%%>', $combo_Result->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(Result)%%>', $combo_Result->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array();
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(Medical_Examination_ID)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(First_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Middle_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Last_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Name_of_Medical_officer)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Examinaton_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Result)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Remark)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Place_of_Examination)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Medical_Examination_ID)%%>', safe_html($urow['Medical_Examination_ID']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Medical_Examination_ID)%%>', html_attr($row['Medical_Examination_ID']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Medical_Examination_ID)%%>', urlencode($urow['Medical_Examination_ID']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(First_name)%%>', safe_html($urow['First_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(First_name)%%>', html_attr($row['First_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(First_name)%%>', urlencode($urow['First_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Middle_name)%%>', safe_html($urow['Middle_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Middle_name)%%>', html_attr($row['Middle_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Middle_name)%%>', urlencode($urow['Middle_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Last_name)%%>', safe_html($urow['Last_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Last_name)%%>', html_attr($row['Last_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Last_name)%%>', urlencode($urow['Last_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Name_of_Medical_officer)%%>', safe_html($urow['Name_of_Medical_officer']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Name_of_Medical_officer)%%>', html_attr($row['Name_of_Medical_officer']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Name_of_Medical_officer)%%>', urlencode($urow['Name_of_Medical_officer']), $templateCode);
		$templateCode = str_replace('<%%VALUE(Examinaton_date)%%>', @date('m/d/Y', @strtotime(html_attr($row['Examinaton_date']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Examinaton_date)%%>', urlencode(@date('m/d/Y', @strtotime(html_attr($urow['Examinaton_date'])))), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Result)%%>', safe_html($urow['Result']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Result)%%>', html_attr($row['Result']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Result)%%>', urlencode($urow['Result']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Remark)%%>', safe_html($urow['Remark']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Remark)%%>', html_attr($row['Remark']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Remark)%%>', urlencode($urow['Remark']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Place_of_Examination)%%>', safe_html($urow['Place_of_Examination']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Place_of_Examination)%%>', html_attr($row['Place_of_Examination']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Place_of_Examination)%%>', urlencode($urow['Place_of_Examination']), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(Medical_Examination_ID)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Medical_Examination_ID)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(First_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(First_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Middle_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Middle_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Last_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Last_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Name_of_Medical_officer)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Name_of_Medical_officer)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Examinaton_date)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Examinaton_date)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Result)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Result)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Remark)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Remark)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Place_of_Examination)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Place_of_Examination)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans) {
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('MEDICAL_EXAMINATION');
	if($selected_id) {
		$jdata = get_joined_record('MEDICAL_EXAMINATION', $selected_id);
		if($jdata === false) $jdata = get_defaults('MEDICAL_EXAMINATION');
		$rdata = $row;
	}
	$templateCode .= loadView('MEDICAL_EXAMINATION-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: MEDICAL_EXAMINATION_dv
	if(function_exists('MEDICAL_EXAMINATION_dv')) {
		$args=array();
		MEDICAL_EXAMINATION_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>